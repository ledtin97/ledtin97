{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useReducer } from 'react';\nvar initialState = {};\nvar store = /*#__PURE__*/createContext(initialState);\nvar Provider = store.Provider;\n\nvar StateProvider = function StateProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case 'action description':\n        var newState = {\n          test: 'test value'\n        };\n        return newState;\n\n      default:\n        throw new Error();\n    }\n\n    ;\n  }, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};\n\nexport { store, StateProvider };","map":{"version":3,"sources":["C:/Users/ledti/OneDrive/Tài liệu/GitHub/ledtin97.github.io/src/store.js"],"names":["React","createContext","useReducer","initialState","store","Provider","StateProvider","children","state","action","type","newState","test","Error","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,KAAK,gBAAGH,aAAa,CAACE,YAAD,CAA3B;AACA,IAAQE,QAAR,GAAqBD,KAArB,CAAQC,QAAR;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAhBC,QAAgB,QAAhBA,QAAgB;;AACxC,oBAA0BL,UAAU,CAAC,UAACM,KAAD,EAAQC,MAAR,EAAmB;AACtD,YAAOA,MAAM,CAACC,IAAd;AACE,WAAK,oBAAL;AACE,YAAMC,QAAQ,GAAG;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAjB;AACA,eAAOD,QAAP;;AACF;AACE,cAAM,IAAIE,KAAJ,EAAN;AALJ;;AAMC;AACF,GARmC,EAQjCV,YARiC,CAApC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcM,QAAd;;AAUA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASM,MAAAA,QAAQ,EAARA;AAAT;AAAjB,KAAuCP,QAAvC,CAAP;AACD,CAZD;;AAcA,SAASH,KAAT,EAAgBE,aAAhB","sourcesContent":["import React, {createContext, useReducer} from 'react';\r\n\r\nconst initialState = {};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ( { children } ) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch(action.type) {\r\n      case 'action description':\r\n        const newState = {test: 'test value'}\r\n        return newState;\r\n      default:\r\n        throw new Error();\r\n    };\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider }"]},"metadata":{},"sourceType":"module"}